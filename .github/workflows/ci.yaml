name: ci-test

on:
  push:
    branches: [ "developing" ]
  pull_request:
    branches: [ "developing" ]

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest
    
    # Service containers to run with container-job
    services:
    # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:12
        # Provide the password for postgres
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: social_media
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5433:5432
      
      mysql:
        # Docker Hub image
        image: mysql:8.0
        # Provide the password for mysql
        env:
          MYSQL_USER: duc
          MYSQL_PASSWORD: secret
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: social_media
        # Set health checks to wait until mysql has started
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 3306 on service container to the host
          - 3307:3306

      redis:
        image: redis:7.0.11
        options: >-
          --health-cmd "redis ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - "6379:6379"

    steps:
    - name: Enable Redis memory overcommit
      run: |
        sudo sysctl vm.overcommit_memory=1
        echo "vm.overcommit_memory = 1" | sudo tee -a /etc/sysctl.conf

    - name: Test Redis
      run: |
        sudo apt-get update
        sudo apt-get install -y redis-tools
        redis-cli -h redis -p 6379 -a secret PING
        redis-cli -h redis -p 6379 -a secret FLUSHALL
        redis-cli -h redis -p 6379 -a secret QUIT
        
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.20
      id: go
    
    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Install golang-migrate
      run: |
        curl -L https://github.com/golang-migrate/migrate/releases/download/v4.14.1/migrate.linux-amd64.tar.gz | tar xvz
        sudo mv migrate.linux-amd64 /usr/bin/migrate
        which migrate
    
    - name: Run PostgreSQL migrations
      run: make migratepgup
    
    # - name: Run MySQL migrations
    #   run: make migratemsup

    - name: Test
      run: make test
